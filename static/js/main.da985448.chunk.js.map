{"version":3,"sources":["components/util/BaseUrl.tsx","components/util/ApiUtils.tsx","components/common/AppHeader.tsx","components/common/NotFound.tsx","components/common/LoadingIndicator.tsx","components/common/PrivateRoute.tsx","components/common/Home.tsx","components/common/Footer.tsx","img/google-logo.png","components/enjoyer/oauth/SocialLogin.tsx","components/enjoyer/oauth/Login.tsx","components/enjoyer/oauth/SocialSignup.tsx","components/enjoyer/oauth/Signup.tsx","components/enjoyer/UpdateEnjoyerForm.tsx","components/enjoyer/oauth/Profile.tsx","components/enjoyer/oauth/OAuth2RedirectHandler.tsx","components/habit/NewHabitForm.tsx","components/habit/UpdateHabitForm.tsx","components/habitTracker/HabitTrackerForm.tsx","components/habitTracker/HabitTrackerCard.tsx","components/habitTracker/HabitTrackerList.tsx","components/habitTracker/VerticalBar.tsx","components/habitTracker/HabitTracker.tsx","components/habit/HabitCard.tsx","components/habit/HabitList.tsx","components/habitMsg/MsgCard.tsx","components/habitMsg/MsgList.tsx","components/habit/Habit.tsx","components/friendship/Search.tsx","components/friendship/SearchResult.tsx","components/habitMsg/NewMessageForm.tsx","components/friendship/FriendCard.tsx","components/friendship/FriendList.tsx","components/friendship/FriendHabitsCard.tsx","components/friendship/FriendHabitsList.tsx","components/friendship/FriendHabits.tsx","components/friendship/Friendship.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_BASE_URL","ACCESS_TOKEN","GOOGLE_AUTH_URL","getCurrentUser","localStorage","getItem","options","headers","Headers","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","request","method","AppHeader","props","className","to","authenticated","onClick","onLogout","NotFound","type","LoadingIndicator","style","display","textAlign","marginTop","PrivateRoute","Component","component","rest","render","pathname","state","from","location","Home","id","data-ride","data-target","data-slide-to","src","alt","href","role","data-slide","aria-hidden","Footer","SocialLogin","googleLogo","Login","SocialSignup","Signup","UpdateEnjoyerForm","useState","name","currentUser","imageUrl","about","formFields","setFormFields","onInputChange","event","target","currentTarget","value","onSubmit","preventDefault","updateUserCallback","onChange","placeholder","rows","e","cancelUpdateUserCallback","Profile","update","setUpdate","delEnjoyer","setDelEnjoyer","enjoyerInfo","setEnjoyerInfo","setErrorMessage","useEffect","axios","get","accessToken","apiEnjoyerInfo","data","catch","error","message","email","data-toggle","data-dismiss","enjoyerId","delete","clear","enjoyer","put","updatedEnjoyer","OAuth2RedirectHandler","getUrlParameter","replace","results","RegExp","exec","search","decodeURIComponent","token","setItem","STREAK_LIST","NewHabitForm","title","goal","description","streak","addHabitCallback","htmlFor","required","defaultValue","map","s","i","UpdateHabitForm","habitBuilt","updateHabitCallback","checked","defaultChecked","cancelUpdateHabitCallback","DATE_OPTIONS","year","month","day","HabitTrackerForm","habitId","workTime","memo","addHabitTrackerCallback","Date","toLocaleDateString","step","min","max","disabled","hour","minute","HabitTrackerCard","createdDate","toLocaleString","xmlns","width","height","fill","viewBox","d","habitTitle","deleteHabitTrackerCallback","HabitTrackerList","habitTrackerList","setHabitTrackerList","apiHabitTrackerList","length","deleteHabitTracker","habitTrackerId","updatedHabitTrackerList","filter","habitTracker","filterHabitComponents","habit","filteredHabitTracker","habitTrackerComponents","MONTH_LIST","BAR_COLOR","VerticalBar","habitTrackerData","setHabitTrackerData","daysPerMonth","date","getFullYear","getMonth","getDate","getYear","searchYear","recordYear","searchMonth","recordDate","getMonthly","getHabitTrackerData","convertMonthData","habitData","habitLegend","yAxisMax","yAxisCollection","datePickerFormat","Array","datePicker","index","hasOwnProperty","x","y","tempIndex","habitobj","color","Math","orientation","items","stackBy","xDomain","yDomain","attr","attrAxis","barWidth","itemArray","push","legendItems","barCollection","dataBar","habitObj","renderChart","HabitTracker","selectedHabitId","setSelectedHabitId","errorMessage","startDate","setStartDate","setDatePickerFormat","errorVisible","setErrorVisible","localdata","splitted","split","Number","isNaN","getHabitIdUrlParameter","format","toSelectHabit","selectDateFormat","includes","Alert","variant","habitPage","selectHabit","selected","dateFormat","showMonthYearPicker","showFullMonthYearPicker","showYearPicker","data-autocomplete","post","updatedHabitTracker","timer","window","setTimeout","onShowAlert","HabitCard","badge","startsWith","path","currentHabit","deleteHabitCallback","HabitList","habitList","setHabitList","apiHabitList","deleteHabit","updatedHabitList","filterHabitComponent","filteredHabit","habitComponents","MsgCard","OverlayTrigger","placement","overlay","Tooltip","friend","Button","text","deleteMsgCallback","MsgList","habitMsgList","setHabitMsgList","apiHabitMsgList","deleteHabitMsg","habitMsgId","msgComponents","habitMsg","Habit","clearTimeout","Search","searchEmailCallback","resetCallback","SearchResult","findFriend","setFindFriend","apiUser","disableAddFriendButton","disable","activated","userRequester","friendList","requester","friendship","receiver","userReceiver","addFriendCallback","fill-rule","NewMessageForm","console","log","addMessageCallback","deselectFriendHabitCallback","friendName","friendImageUrl","FriendCard","emailVerified","password","provider","providerId","lastModifiedDate","setFriend","requesterId","apiFriend","receiverId","deleteFriendshipCallback","confirmFriendshipCallback","friendshipId","FriendList","deleteFriendship","confirmFriendship","requesterComponents","receiverComponents","FriendHabitsCard","selectFriendHabitCallback","friendId","friendHabitComponents","FriendHabits","FriendHabitsList","Friendship","setFriendList","selectedHabit","setSelectedHabit","searchEmail","setSearchEmail","apiFriendList","resetSearch","query","msg","App","setAuthenticated","setCurrentUser","loading","setLoading","removeItem","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da985448.chunk.js","sourcesContent":["// local\n// export const API_BASE_URL = 'http://localhost:3000';\n\n// For deployed server\nexport const API_BASE_URL = 'https://habit-builder-ada.herokuapp.com';\n\nexport const ACCESS_TOKEN = 'accessToken';\n\n// local\n// export const OAUTH2_REDIRECT_URI = 'http://localhost:3001/oauth2/redirect'\n\n// deployed front-end\nexport const OAUTH2_REDIRECT_URI = 'https://ichbinorange.github.io/reactjs-habit-builder/oauth2/redirect'\n\nexport const GOOGLE_AUTH_URL = API_BASE_URL + '/oauth2/authorize/google?redirect_uri=' + OAUTH2_REDIRECT_URI;","import { API_BASE_URL, ACCESS_TOKEN } from './BaseUrl';\n\ninterface stateType {\n    url: string;\n    method: string;\n    body?: any;\n}\n\nconst request = (options: stateType) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/enjoyer/me\",\n        method: 'GET'\n    });\n}","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './AppHeader.css';\n\ntype stateType = {\n    authenticated: boolean;\n    onLogout: {(): void;};\n};\n\nconst AppHeader: React.FC<stateType> = (props) => {\n    return (\n        <header className=\"app-header\">\n            <div className=\"container\">\n                <div className=\"app-options\">\n                    <nav className=\"app-nav fixed-top navbar-light bg-light\">\n                        <Link to=\"/\" className=\"navbar-brand navbar-nav mr-auto text-center header-font\"><h1 className=\"display-3\">Habit Buddy</h1></Link>\n                        { props.authenticated ? (\n                            <ul className=\"nav justify-content-end\">\n                                <li>\n                                    <NavLink to=\"/habit\">Habit</NavLink>        \n                                </li>\n                                <li>\n                                    <NavLink to=\"/habitTracker\">Habit Tracker</NavLink>        \n                                </li>\n                                <li>\n                                    <NavLink to=\"/friendship\">Friends</NavLink>        \n                                </li>\n                                <li>\n                                    <NavLink to=\"/profile\">Profile</NavLink>\n                                </li>\n                                <li>\n                                    <a className=\"thumbnail\" onClick={ props.onLogout }>Logout</a>\n                                </li>\n                            </ul>\n                        ): (\n                            <ul className=\"nav justify-content-end\">\n                                <li>\n                                    <NavLink to=\"/login\">Login</NavLink>        \n                                </li>\n                                <li>\n                                    <NavLink to=\"/signup\">Signup</NavLink>        \n                                </li>\n                            </ul>\n                        )}\n                    </nav>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default AppHeader;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NotFound.css';\n\nconst NotFound: React.FC = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h1 className=\"title\">\n                404\n            </h1>\n            <div className=\"desc\">\n                The Page you're looking for was not found.\n            </div>\n            <Link to=\"/\"><button className=\"go-back-btn btn btn-primary\" type=\"button\">Go Back</button></Link>\n        </div>\n    );\n}\n\nexport default NotFound;","import React from 'react';\n\nconst LoadingIndicator: React.FC = () => {\n    return (\n        <div className=\"loading-indicator\" style={{display: 'block', textAlign: 'center', marginTop: '30px'}}>\n            Loading ...\n        </div>\n    );\n}\n\nexport default LoadingIndicator;","import React from 'react';\nimport {\n    Route,\n    Redirect, \n  } from \"react-router-dom\";\n    \ninterface stateType {\n    path: string; \n    authenticated: boolean;\n    currentUser: any;\n    component: any;\n    onLogout?: {(): void;};\n}\n\nconst PrivateRoute: React.FC<stateType> = ({ component: Component, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  )  \n};\n  \nexport default PrivateRoute;","import React from 'react';\nimport './Home.css';\n\nconst Home: React.FC = () => {\n    return (\n        <div id=\"carouselExampleControls\" className=\"carousel slide w-75 d-block mx-auto\" data-ride=\"carousel\">\n            <ol className=\"carousel-indicators\">\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n            </ol>\n            <div className=\"carousel-inner\">\n                <div className=\"carousel-item active\">\n                    <img className=\"d-block w-100 img-fluid img-thumbnail\" src=\"https://images.unsplash.com/photo-1551632811-561732d1e306?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"Independent backpacker?\" />\n                    <div className=\"carousel-caption d-none d-md-block\">\n                        <h4 className=\"text-white bg-dark\">Independent backpacker?</h4>\n                    </div>\n                </div>\n                <div className=\"carousel-item\">\n                    <img className=\"d-block w-100 img-fluid img-thumbnail\" src=\"https://images.unsplash.com/photo-1580894908361-967195033215?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80\" alt=\"Build a mobile app in half a year?\" />\n                    <div className=\"carousel-caption d-none d-md-block\">\n                        <h4 className=\"text-white bg-dark\">Build a mobile app in half a year?</h4>\n                    </div>\n                </div>\n                <div className=\"carousel-item\">\n                    <img className=\"d-block w-100 img-fluid img-thumbnail\" src=\"https://images.unsplash.com/photo-1605522561233-768ad7a8fabf?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1952&q=80\" alt=\"Cook delicious Taiwanese food?\" />\n                    <div className=\"carousel-caption d-none d-md-block\">\n                        <h4 className=\"text-white bg-dark\">Cook delicious Taiwanese food?</h4>\n                    </div>\n                </div>\n            </div>\n            <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span className=\"sr-only\">Previous</span>\n            </a>\n            <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span className=\"sr-only\">Next</span>\n            </a>\n        </div>\n    );\n}\n\nexport default Home;\n\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer: React.FC = () => {\n    return (\n        <footer className=\"force-to-bottom\">\n          <span className=\"align-bottom\">&copy; 2021 Ting-Yi Liu @Ada Developers Academy</span>\n        </footer>\n    );\n}\n    \n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/google-logo.9a818e61.png\";","import React from 'react';\nimport { GOOGLE_AUTH_URL } from '../../util/BaseUrl';\nimport googleLogo from '../../../img/google-logo.png';\nimport './Login.css';\n\nconst SocialLogin: React.FC = () => {\n    return (\n        <div className=\"social-login\">\n            <a className=\"btn btn-block social-btn google\" href={GOOGLE_AUTH_URL}>\n                <img src={googleLogo} alt=\"Google\" /> Log in with Google</a>\n        </div>\n    );\n}\n\nexport default SocialLogin;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom'\nimport SocialLogin from './SocialLogin';\nimport './Login.css';\n\ntype stateType = {\n    authenticated: boolean;\n    location: object;\n}\n\nconst Login: React.FC<stateType> = (props) => {\n    if(props.authenticated) {\n        return <Redirect\n            to={{\n            pathname: \"/\",\n            state: { from: props.location }\n        }}/>;            \n    }\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-content\">\n                <h1 className=\"login-title\">Login to Habit Buddy</h1>\n                <SocialLogin />\n                <div className=\"or-separator\">\n                    <span className=\"or-text\">OR</span>\n                </div>\n                <span className=\"signup-link\">New user? <Link to=\"/signup\">Sign up!</Link></span>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport { GOOGLE_AUTH_URL } from '../../util/BaseUrl';\nimport googleLogo from '../../../img/google-logo.png';\nimport './Signup.css';\n\nconst SocialSignup: React.FC = () => {\n    return (\n        <div className=\"social-signup\">\n            <a className=\"btn btn-block social-btn google\" href={ GOOGLE_AUTH_URL }>\n                <img src={ googleLogo } alt=\"Google\" /> Sign up with Google</a>\n        </div>\n    );\n}\n\nexport default SocialSignup;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom'\nimport SocialSignup from './SocialSignup';\nimport './Signup.css';\n\ntype stateType = {\n    authenticated: boolean;\n    location: object;\n}\n\nconst Signup: React.FC<stateType> = (props) => {\n    return (\n        <div className=\"signup-container\">\n            { props.authenticated ? <Redirect\n                to={{\n                pathname: \"/\",\n                state: { from: props.location }\n            }}/> : null } \n            <div className=\"signup-content\">\n                <h1 className=\"signup-title\">Signup with Habit Buddy</h1>\n                <SocialSignup />\n                <div className=\"or-separator\">\n                    <span className=\"or-text\">OR</span>\n                </div>\n                <span className=\"login-link\">Already have an account? <Link to=\"/login\">Login!</Link></span>\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;","import React, { useState } from 'react';\n\ntype stateType = {\n    currentUser: any;\n    updateUserCallback: {(enjoyer: object): void;};\n    cancelUpdateUserCallback: {(enjoyer: object): void;};\n}\n\ntype form = {\n    name: string;\n    imageUrl: string;\n    about: string;\n}\n\nconst UpdateEnjoyerForm: React.FC<stateType> = (props) => {\n    const [formFields, setFormFields] = useState<form>({\n        name: props.currentUser.name,\n        imageUrl: props.currentUser.imageUrl,\n        about: props.currentUser.about,\n    });\n    \n    // event handlers for input\n    const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event)=> {\n        setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n    }\n\n    // event handlers for textarea\n    const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event)=> {\n        setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n    }\n\n    const onFormSubmit = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        props.updateUserCallback(formFields);\n\n        setFormFields({\n            name: '',\n            imageUrl: '',\n            about: ''\n        })\n    }\n\n    return (\n    <form onSubmit={onFormSubmit} className=\"justify-content-center\">\n        <h2 className=\"new-card-form__header mt-3\">Update</h2>\n        <div className=\"form-group\">\n        <label className=\"exampleInputEmail1 m-2\">Name:</label>\n        <input id=\"name\"\n                name=\"name\"\n                onChange={onInputChange}\n                value={formFields.name}\n                className=\"form-control\" \n                placeholder={props.currentUser.name ? props.currentUser.name : \"Your display name...\"}\n                type=\"text\"\n                />\n        <label className=\"exampleInputEmail1 m-2\">Your Image:</label>\n        <input id=\"imageUrl\"\n                name=\"imageUrl\"\n                onChange={onInputChange}\n                value={formFields.imageUrl}\n                className=\"form-control\" \n                placeholder={props.currentUser.imageUrl ? props.currentUser.imageUrl : \"Your display image...\"}\n                type=\"text\"\n                />\n        <label className=\"exampleInputEmail1 m-2\">About You:</label>\n        <textarea id=\"about\"\n                name=\"about\"\n                onChange={onTextareaChange}\n                value={formFields.about}\n                className=\"form-control\"\n                rows={8}\n                placeholder={props.currentUser.about ? props.currentUser.about : \"Something about you...\"}\n                />\n        <button\n            onClick={(e: React.MouseEvent<HTMLElement>) => props.cancelUpdateUserCallback}\n            className=\"btn btn-outline-info mt-3 mr-3 btn-sm\"\n        >Cancel</button>\n        <button\n            type=\"submit\"\n            className=\"btn btn-outline-success mt-3 btn-sm\"\n        >Save</button>\n        </div>\n    </form>\n    )\n}\n\nexport default UpdateEnjoyerForm;","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios';\n\nimport { API_BASE_URL } from '../../util/BaseUrl';\nimport UpdateEnjoyerForm from '../UpdateEnjoyerForm';\nimport './Profile.css';\n\ntype stateType = {\n    currentUser: any;\n    location: any;\n    onLogout: {(): void;};\n}\n\nconst Profile: React.FC<stateType> = (props) => {\n    const [update, setUpdate] = useState<boolean>(false);\n    const [delEnjoyer, setDelEnjoyer] = useState<boolean>(false);\n    const [enjoyerInfo, setEnjoyerInfo] = useState({...props.currentUser});\n    const [errorMessage, setErrorMessage] = useState<String>('');\n\n    useEffect(() => {\n        axios.get(`${API_BASE_URL}/enjoyer/${props.currentUser.id}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n            .then((response) => {\n                const apiEnjoyerInfo = response.data;\n                setEnjoyerInfo(apiEnjoyerInfo)\n            })\n            .catch((error) => {\n                setErrorMessage(error.message);\n            });\n    }, [update]); // [enjoyerInfo] to infinity loop\n\n    const updateEnjoyer = (enjoyer: any) => {\n        setUpdate(false);\n        axios.put(`${API_BASE_URL}/enjoyer/${props.currentUser.id}`, {...enjoyer, id: props.currentUser.id}, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n          .then((response) => {\n            const updatedEnjoyer = [...enjoyerInfo, ...enjoyer];\n            setEnjoyerInfo(updatedEnjoyer);\n            setErrorMessage('Successufully update your profile');\n          })\n          .catch((error) => {\n            setErrorMessage(`Unable to update your profile`);\n        });\n    }\n    \n    const deleteEnjoyer = (enjoyerId: number) => {\n        setDelEnjoyer(!delEnjoyer)\n        axios.delete(`${API_BASE_URL}/enjoyer/${enjoyerId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n        .then((response) => {\n            localStorage.clear();\n            setErrorMessage(`Enjoyer ${ enjoyerId } deleted`);\n        })\n        .catch((error) => {\n            setErrorMessage(`Unable to delete enjoyer ${ enjoyerId }`);\n        })\n    }\n\n    const cancelUpdateUser = () => {\n        setUpdate(false)\n    }\n\n    if(delEnjoyer) {\n        props.onLogout()\n        return <Redirect to={{\n            pathname: \"/login\",\n            state: { \n                from: props.location,\n                error: { from: props.location }\n            }\n        }}/>;            \n    }\n    return (\n        <div className=\"container component-bkgd pt-5 p-4\">\n            <h1 className=\"mb-5 text-center\">Your Profile</h1>\n            <div className=\"row profile-info\">\n                <div className={props.currentUser.imageUrl ? \"col-sm\" : \"col-sm\"}>\n                    { enjoyerInfo.imageUrl ? (\n                        <img className=\"profile-img rounded-circle\" src={ enjoyerInfo.imageUrl } alt={ enjoyerInfo.name }/>\n                    ) : (\n                        <div>\n                            <span>{ enjoyerInfo.name &&  enjoyerInfo.name[0] }</span>\n                        </div>\n                    )}\n                </div>\n                <div className=\"col-sm\">\n                    <div className=\"text-center m-5\">\n                        <h2>{ enjoyerInfo.name }</h2>\n                        <p className=\"text-center m-2\">{ enjoyerInfo.email }</p>\n                        <h5 className=\"mt-5 text-center\"> About you</h5>\n                        <div className=\"card d-inline-flex mt-2\">\n                            <div className=\"card-body\">\n                                <div className=\"text-left\">\n                                    <p>{enjoyerInfo.about}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"text-center\">\n                        <button\n                            onClick={(e: React.MouseEvent<HTMLElement>) => setUpdate(true)}\n                            className=\"btn btn-outline-info btn-sm\"\n                        >Edit</button>\n\n                        <button type=\"button\" className=\"btn btn-outline-danger ml-2 btn-sm\" data-toggle=\"modal\" data-target={`#user#${enjoyerInfo.id}`}>Delete Account</button>\n                        <div className=\"modal\" id={`user#${enjoyerInfo.id}`}>\n                            <div className=\"modal-dialog\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-body\">\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                                            Delete your account\n                                    </div>\n                                    <div className=\"modal-footer p-0\">\n                                        <button type=\"button\" \n                                                className=\"btn btn-outline-danger ml-3 btn-sm\" \n                                                data-dismiss=\"modal\"\n                                                onClick={() => deleteEnjoyer(enjoyerInfo.id)}>Delete</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n                { update ? <div className=\"col-sm text-center m-5\">\n                                <UpdateEnjoyerForm updateUserCallback={updateEnjoyer}\n                                                    cancelUpdateUserCallback={cancelUpdateUser}\n                                                    currentUser={ enjoyerInfo }/> \n                            </div> : null}\n            </div>\n        </div>    \n    );\n    \n}\n\nexport default Profile;","import React from 'react';\nimport { ACCESS_TOKEN } from '../../util/BaseUrl';\nimport { Redirect } from 'react-router-dom'\n\ntype stateType = {\n    authenticated: boolean;\n    location: any;\n}\n\nconst OAuth2RedirectHandler: React.FC<stateType> = (props) => {\n    const getUrlParameter = (name: string) => {\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n\n        const results = regex.exec(props.location.search);\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    };\n\n    const token = getUrlParameter('token');\n    const error = getUrlParameter('error');\n\n    if(token) {\n        localStorage.setItem(ACCESS_TOKEN, token);\n        return <Redirect to={{\n            pathname: \"/profile\",\n            state: { from: props.location }\n        }}/>; \n    } else {\n        return <Redirect to={{\n            pathname: \"/login\",\n            state: { \n                from: props.location,\n                error: error \n            }\n        }}/>; \n    }\n}\n\nexport default OAuth2RedirectHandler;","import React, { useState } from 'react';\n\ntype stateType = {\n  addHabitCallback: {(habit: object): void;};\n}\n\ntype form = {\n  title: string,\n  goal: string,\n  description: string,\n  streak: string,\n}\n\nconst STREAK_LIST: Array<string> = [\"Choose one...\", \"daily\", \"weekly\", \"monthly\", \"yearly\"]\n\nconst NewHabitForm: React.FC<stateType> = (props) => {\n  const [formFields, setFormFields] = useState<form>({\n    title: '',\n    goal: '',\n    description: '',\n    streak: ''\n  });\n\n  // event handlers for input\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  // event handlers for select\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  // event handlers for textarea\n  const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  const onFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    props.addHabitCallback(formFields);\n\n    setFormFields({\n      title: '',\n      goal: '',\n      description: '',\n      streak: ''\n    })\n  }\n\n  return (\n    <form onSubmit={onFormSubmit} className=\"text-center\">\n      <h3 className=\"text-center\">New Habit</h3>\n      <div className=\"form-group\">\n        <label className=\"exampleInputEmail1\"\n               htmlFor=\"title\">Title:</label>\n        <input id=\"title\"\n                name=\"title\"\n                onChange={onInputChange}\n                value={formFields.title}\n                className=\"form-control\" \n                placeholder=\"Eat veggies...\"\n                type=\"text\"\n                required\n                />\n        <label className=\"exampleInputEmail1 m-2\"\n                htmlFor=\"goal\">Goal:</label>\n        <input id=\"goal\"\n                name=\"goal\"\n                onChange={onInputChange}\n                value={formFields.goal}\n                className=\"form-control\" \n                placeholder=\"Two type of veggies per day...\"\n                type=\"text\"\n                required\n                />\n        <label className=\"exampleInputEmail1 m-2\">Note:</label>\n        <textarea id=\"description\"\n                  name=\"description\"\n                  rows={6}\n                  onChange={onTextareaChange}\n                  value={formFields.description}\n                  className=\"form-control\" \n                  placeholder=\"Put veggies in grocery shopping list...\"\n                />\n        <label className=\"exampleFormControlSelect1 m-2\">Streak:</label>\n        <select className=\"form-control\"\n                defaultValue=\"\"\n                name=\"streak\"\n                onChange={onSelectChange} \n                >\n          {\n            STREAK_LIST.map((s, i) => (\n              <option key={i}\n                      value={s} \n                      >{s}</option>\n            ))\n          }\n        </select>\n        <div className=\"text-center\">\n          <button type=\"submit\"\n                  className=\"btn btn-outline-success btn-sm mt-3\">\n            Add Habit\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default NewHabitForm;","import React, { useState } from 'react';\n\ntype stateType = {\n  id: number;\n  title: string;\n  goal: string;\n  description: string;\n  streak: string;\n  habitBuilt: boolean;\n  updateHabitCallback: {(habit: object): void;};\n  cancelUpdateHabitCallback: {(habit: object): void;};\n}\n\ntype form = {\n  title: string;\n  goal: string;\n  description: string;\n  streak: string;\n  habitBuilt: boolean;\n}\n\nconst STREAK_LIST: Array<string> = [\"daily\", \"weekly\", \"monthly\", \"yearly\"]\n\nconst UpdateHabitForm: React.FC<stateType> = (props) => {\n  const [formFields, setFormFields] = useState<form>({\n    title: props.title,\n    goal: props.goal,\n    description: props.description,\n    streak: props.streak,\n    habitBuilt: props.habitBuilt\n  });\n\n  // event handlers for input\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  // event handlers for textarea\n  const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  // event handlers for select\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  // event handlers for checkbox\n  const onCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {  \n    setFormFields({...formFields, habitBuilt: event.target.checked});\n  };\n\n  const onFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    props.updateHabitCallback(formFields);\n\n    setFormFields({\n      title: '',\n      goal: '',\n      description: '',\n      streak: '',\n      habitBuilt: props.habitBuilt,\n    })\n  }\n\n  return (\n    <form onSubmit={onFormSubmit} className=\"justify-content-center\">\n      <h2 className=\"new-card-form__header\">Update Habit# {props.id}</h2>    \n      <div className=\"form-group\">\n        <div className='custom-control custom-switch'>\n          <input id=\"customSwitches\" \n                  name=\"customSwitches\" \n                  onChange={onCheckboxChange}\n                  defaultChecked={formFields.habitBuilt}\n                  className=\"custom-control-input mr-2\" \n                  type=\"checkbox\" />\n          <label className=\"custom-control-label\" htmlFor=\"customSwitches\">It's part of my life Now!</label>\n        </div>\n        <br/>\n        <label className=\"exampleInputEmail1\">Title:</label>\n        <input id=\"title\"\n                name=\"title\"\n                onChange={onInputChange}\n                value={formFields.title}\n                className=\"form-control w-100\" \n                type=\"text\"\n                required\n                />\n        <label className=\"exampleInputEmail1\">Goal:</label>\n        <input id=\"goal\"\n                name=\"goal\"\n                onChange={onInputChange}\n                value={formFields.goal}\n                className=\"form-control w-100\" \n                type=\"text\"\n                required\n                />\n        <label className=\"exampleInputEmail1\">Description:</label>\n        <textarea id=\"description\"\n                name=\"description\"\n                rows={8}\n                onChange={onTextareaChange}\n                value={formFields.description}\n                className=\"form-control w-100\" \n                placeholder=\"description\"\n                />\n        <label className=\"exampleFormControlSelect1\">Streak:</label>\n        <select className=\"form-control w-100\"\n                name=\"streak\"\n                value={formFields.streak}\n                onChange={onSelectChange} \n                >\n          {\n            STREAK_LIST.map((s, i) => (\n              <option key={i}\n                      value={s} \n                      >{s}</option>\n            ))\n          }\n        </select>\n        <div className=\"text-center\">\n          <button\n              onClick={(e: React.MouseEvent<HTMLElement>) => props.cancelUpdateHabitCallback}\n              className=\"btn btn-outline-info mt-3 mr-3 btn-sm\"\n          >Cancel</button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-success mt-3 btn-sm\"\n          >Save</button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default UpdateHabitForm;","import React, { useState } from 'react';\n\ntype stateType = {\n  habitId: number;\n  addHabitTrackerCallback: {(habit: object): void;};\n}\n\ntype form = {\n  habitId: number,\n  workTime: number,\n  memo: string,\n}\n\nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric' };\n\nconst HabitTrackerForm: React.FC<stateType> = (props) => {\n  const [formFields, setFormFields] = useState<form>({\n    habitId: -1,\n    workTime: 0,\n    memo: '',\n  });\n\n  // event handlers for input\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n  // event handlers for textarea\n  const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  const onFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    props.addHabitTrackerCallback({...formFields, habitId: props.habitId});\n\n    setFormFields({\n      habitId: -1,\n      workTime: 0,\n      memo: '',\n    })\n  }\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      <h3>New Record {props.habitId !== -1 ? `for Habit# ${props.habitId}` : \"- Pick a habit\"}</h3>\n      <div className=\"form-group\">\n        <h6>Today is {new Date().toLocaleDateString('en-US', DATE_OPTIONS)}</h6>\n        <label className=\"text-left m-2\">Time spent(hr):</label>\n        <input type=\"number\" \n                placeholder=\"Choose one...\" \n                step=\"0.5\" \n                min=\"0.5\" \n                max=\"24\" \n                id=\"workTime\"\n                name=\"workTime\"\n                onChange={onInputChange}\n                required/>\n        <br/>\n        <label className=\"text-left m-2\">Note:</label>\n        <textarea id=\"memo\"\n                  name=\"memo\"\n                  rows={6}\n                  onChange={onTextareaChange}\n                  value={formFields.memo}\n                  className=\"form-control\" \n                  placeholder=\"I had tomato and zucchini today\"\n                  />\n        <div className=\"text-center\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-success mt-3 btn-sm\"\n            disabled={props.habitId === -1}>\n            Add Record</button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default HabitTrackerForm;","import React from 'react';\nimport '../habit/Habit.css';\n\ntype stateType = {\n  key?: number;\n  id: number;\n  habitId: number;\n  habitTitle: string;\n  workTime: number;\n  memo: string;\n  createdDate: string;\n  deleteHabitTrackerCallback: {(habitTrackerId: number): void;};\n}\n  \nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\nconst HabitTrackerCard: React.FC<stateType> = (props) => {\n  return (\n    <div className=\"card w-100 d-inline-flex bd-highlight p-2 m-1\">\n      <div className=\"card-body p-0\">\n        <div className=\"d-flex justify-content-between\">\n            <h5 className=\"display-5\">#{props.habitId}</h5>\n            <div className=\"text-sm-left\">Record ID: {props.id}</div>\n        </div>\n        <div>\n            Time spent(hr): {props.workTime}\n            <br/>Note: {props.memo}\n        </div>\n      </div>\n      <div className=\"card-footer d-flex justify-content-between p-0 mt-2\">\n        <div>\n          {(new Date(props.createdDate)).toLocaleString('en-US', DATE_OPTIONS)}\n        </div>\n\n        <div>\n            <button type=\"button\" className=\"btn btn-outline-danger mr-2 btn-sm btn-size\" data-toggle=\"modal\" data-target={`#habitTracker#${props.id}`}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n              </svg>\n            </button>\n            <div className=\"modal\" id={`habitTracker#${props.id}`}>\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-body\">\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                    Delete Record#{props.id} for Habit#{props.habitId} - {props.habitTitle}\n                  </div>\n                  <div className=\"modal-footer p-0\">\n                    <button type=\"button\" \n                            className=\"btn btn-outline-danger btn-sm\" \n                            data-dismiss=\"modal\"\n                            onClick={() => props.deleteHabitTrackerCallback(props.id)}>Delete</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HabitTrackerCard;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport HabitTrackerCard from './HabitTrackerCard';\n\ntype stateType = {\n  currentUser: any;\n  habitId: number;\n}\n\nconst HabitTrackerList: React.FC<stateType> = (props) => {\n  const [habitTrackerList, setHabitTrackerList] = useState<Array<object>>([]);\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  useEffect(() => {\n      axios.get(`${API_BASE_URL}/habitTrackers/${props.currentUser.id}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n        .then((response) => {\n          const apiHabitTrackerList = response.data;\n          if (apiHabitTrackerList.length !== 0) {\n            setHabitTrackerList([...apiHabitTrackerList]);\n          } else {\n            setHabitTrackerList(apiHabitTrackerList)\n          }\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n      });\n  }, []); \n\n  const deleteHabitTracker = (habitTrackerId: number) => {\n    const updatedHabitTrackerList = habitTrackerList.filter((habitTracker: any) => {\n      return habitTracker.id !== habitTrackerId;\n    });\n\n    if (updatedHabitTrackerList.length < habitTrackerList.length) {\n      axios.delete(`${API_BASE_URL}/habitTracker/${habitTrackerId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n        .then((response) => {\n          setErrorMessage(`Habit ${ habitTrackerId } deleted`);\n        })\n        .catch((error) => {\n          setErrorMessage(`Unable to delete habitTracker ${ habitTrackerId }`);\n        })\n      setHabitTrackerList(updatedHabitTrackerList);\n    }\n  }\n\n  const filterHabitComponents = habitTrackerList.filter((habitTracker: any) => habitTracker.habit.id === props.habitId).map((filteredHabitTracker: any) => {\n    return (\n      <HabitTrackerCard key={filteredHabitTracker.id}\n                        id={filteredHabitTracker.id}\n                        habitId={filteredHabitTracker.habit.id}\n                        habitTitle={filteredHabitTracker.habit.title}\n                        workTime={filteredHabitTracker.workTime}\n                        memo={filteredHabitTracker.memo}\n                        createdDate={filteredHabitTracker.createdDate}\n                        deleteHabitTrackerCallback={deleteHabitTracker}/>\n    )\n  })\n\n  const habitTrackerComponents = habitTrackerList.map((habitTracker: any) => {\n    return (\n      <HabitTrackerCard key={habitTracker.id}\n                        id={habitTracker.id}\n                        habitId={habitTracker.habit.id}\n                        habitTitle={habitTracker.habit.title}\n                        workTime={habitTracker.workTime}\n                        memo={habitTracker.memo}\n                        createdDate={habitTracker.createdDate}\n                        deleteHabitTrackerCallback={deleteHabitTracker}/>\n    )\n  })\n\n  return (\n    <div>\n      {props.habitId === -1 ? habitTrackerComponents : filterHabitComponents}\n    </div>\n  )\n}\n\nexport default HabitTrackerList;","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    XYPlot,\n    XAxis,\n    YAxis,\n    HorizontalGridLines,\n    VerticalBarSeries,\n    VerticalBarSeriesPoint,\n    DiscreteColorLegend,\n} from \"react-vis\";\nimport { API_BASE_URL } from '../util/BaseUrl';\n\ntype stateType = {\n    currentUser: any;\n    habitId: number;\n    datePickerFormat: string;\n    datePicker: Date;\n}\n\ntype legendinfo = {\n    title: string;\n    color: string;\n}\n\nconst MONTH_LIST: string[] = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\nconst BAR_COLOR: string[] = ['#19CDD7', '#DDB27C', '#88572C', '#FF991F', '#F15C17', '#223F9A', '#DA70BF', '#125C77', '#4DC19C', '#776E57', '#12939A', '#17B8BE', '#F6D18A', '#B7885E', '#FFCB99', '#F89570', '#829AE3', '#E79FD5', '#1E96BE', '#89DAC1', '#B3AD9E']\n\nconst VerticalBar: React.FC<stateType> = (props) => {\n    const [habitTrackerData, setHabitTrackerData] = useState<Object[]>([]);\n    const [errorMessage, setErrorMessage] = useState<String>('');\n    \n    // for x-axis's month chart - to get how many days in a month for a specific year\n    const daysPerMonth = (date: string) => {\n      return new Date(new Date(date).getFullYear(), new Date(date).getMonth() + 1, 0).getDate()\n    }\n    \n    // for filter data - retrieve month's data (t/f)\n    const getYear = (date: {searchYear: Date, recordYear: string}) => {\n        return new Date(date.searchYear).getFullYear() === new Date(date.recordYear).getFullYear()\n    }\n\n    // for filter data - retrieve month's data (t/f)\n    const getMonth = (date: {searchMonth: Date, recordDate: string}) => {\n        return new Date(date.searchMonth).getMonth() === new Date(date.recordDate).getMonth()\n    }\n\n    // for organize monthly data - accumulate the info based on date\n    const getMonthly = (date: string) => {\n        return new Date(date).getMonth()\n    }\n\n    // for organize daily data - accumulate the info based on date\n    const getDate = (date: string) => {\n        return new Date(date).getDate()\n    }\n\n    useEffect(() => {\n        axios.get(`${API_BASE_URL}/habitTrackers/${props.currentUser.id}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n        .then((response) => {\n            const getHabitTrackerData = response.data;\n            setHabitTrackerData([...getHabitTrackerData]);\n            setErrorMessage('');\n        })\n        .catch((error) => {\n            setErrorMessage(`Unable to add a new habit record`);\n        });\n    }, []); \n\n    // for habits' month data\n    const convertMonthData = () => {\n        let habitData: { [key: string]: VerticalBarSeriesPoint[]; } = {};\n        let habitLegend:  { [key: string]: legendinfo; } = {};\n        let yAxisMax: number = 0;\n        let yAxisCollection: number[] = [];\n        if (props.datePickerFormat.length === 5) { // month data\n            yAxisCollection = Array<number>(daysPerMonth(`${props.datePicker}`)).fill(0);\n            if (props.habitId === -1) { // for multiple habits\n                // step 1: create habitData\n                const filterHabitComponents = habitTrackerData.filter((habitTracker: any) => (getMonth({searchMonth: props.datePicker, recordDate: habitTracker.createdDate}) && getYear({searchYear: props.datePicker, recordYear: habitTracker.createdDate}))).map((filteredHabitTracker: any) => {\n                    let index: number = getDate(filteredHabitTracker.createdDate) - 1;\n                    if (!habitData.hasOwnProperty(filteredHabitTracker.habit.id)) { // generate VerticalBarSeriesPoint[] template for a habit \n                        habitData[filteredHabitTracker.habit.id] = new Array(daysPerMonth(`${props.datePicker}`));\n                        for (let i = 0; i < habitData[filteredHabitTracker.habit.id].length; i++) {\n                            habitData[filteredHabitTracker.habit.id][i] = { x: (i + 1), y: 0 };\n                        }\n                    }\n                    habitData[filteredHabitTracker.habit.id][index].y += filteredHabitTracker.workTime;\n                    yAxisCollection[index] += filteredHabitTracker.workTime;\n                })\n                // step 2: turn habitData into habitLegend\n                let tempIndex = 0;\n                for (const habitobj in habitData) {\n                    habitLegend[habitobj] = {title: `Habit#${habitobj}`, color: BAR_COLOR[tempIndex]};\n                    tempIndex += 1;\n                }\n                // step 3: find the max in yAxisCollection\n                yAxisMax = Math.max(...yAxisCollection);\n\n            } else { // for single habit\n                habitData[props.habitId] = new Array(daysPerMonth(`${props.datePicker}`));\n                for (let i = 0; i < habitData[props.habitId].length; i++) {\n                    habitData[props.habitId][i] = { x: (i + 1), y: 0 };\n                }\n                const filterHabitComponents = habitTrackerData.filter((habitTracker: any) => (habitTracker.habit.id === props.habitId && getMonth({searchMonth: props.datePicker, recordDate: habitTracker.createdDate}) && getYear({searchYear: props.datePicker, recordYear: habitTracker.createdDate}))).map((filteredHabitTracker: any) => {\n                    let index: number = getDate(filteredHabitTracker.createdDate) - 1;\n                    habitData[props.habitId][index].y += filteredHabitTracker.workTime;\n                    if (yAxisMax < habitData[filteredHabitTracker.habit.id][index].y) {\n                        yAxisMax = habitData[filteredHabitTracker.habit.id][index].y\n                    };\n                  }\n                )\n                habitLegend[props.habitId] = {title: `Habit#${props.habitId}`, color: BAR_COLOR[0]};\n            }\n        } else { // year data\n            yAxisCollection = Array<number>(12).fill(0); // fixed 12 months\n            if (props.habitId === -1) { // for multiple habits\n                // step 1: create habitData\n                const filterHabitComponents = habitTrackerData.filter((habitTracker: any) => (getYear({searchYear: props.datePicker, recordYear: habitTracker.createdDate}))).map((filteredHabitTracker: any) => {\n                    let index: number = getMonthly(filteredHabitTracker.createdDate);\n                    if (!habitData.hasOwnProperty(filteredHabitTracker.habit.id)) { // generate VerticalBarSeriesPoint[] template for a habit \n                        habitData[filteredHabitTracker.habit.id] = new Array(12); // fixed 12 months\n                        for (let i = 0; i < habitData[filteredHabitTracker.habit.id].length; i++) {\n                            habitData[filteredHabitTracker.habit.id][i] = { x: (i + 1), y: 0 };\n                        }\n                    }\n                    habitData[filteredHabitTracker.habit.id][index].y += filteredHabitTracker.workTime;\n                    yAxisCollection[index] += filteredHabitTracker.workTime;\n                })\n                // step 2: turn habitData into habitLegend\n                let tempIndex = 0;\n                for (const habitobj in habitData) {\n                    habitLegend[habitobj] = {title: `Habit#${habitobj}`, color: BAR_COLOR[tempIndex]};\n                    tempIndex += 1;\n                }\n                // step 3: find the max in yAxisCollection\n                yAxisMax = Math.max(...yAxisCollection);\n\n            } else { // for single habit\n                habitData[props.habitId] = new Array(12); // fixed 12 months\n                for (let i = 0; i < habitData[props.habitId].length; i++) {\n                    habitData[props.habitId][i] = { x: (i + 1), y: 0 };\n                }\n                const filterHabitComponents = habitTrackerData.filter((habitTracker: any) => (habitTracker.habit.id === props.habitId && getYear({searchYear: props.datePicker, recordYear: habitTracker.createdDate}))).map((filteredHabitTracker: any) => {\n                    let index: number = getMonthly(filteredHabitTracker.createdDate);\n                    habitData[props.habitId][index].y += filteredHabitTracker.workTime;\n                    if (yAxisMax < habitData[filteredHabitTracker.habit.id][index].y) {\n                        yAxisMax = habitData[filteredHabitTracker.habit.id][index].y\n                    };\n                  }\n                )\n                habitLegend[props.habitId] = {title: `Habit#${props.habitId}`, color: BAR_COLOR[0]};\n            }\n        }\n        \n        yAxisMax += 1;\n        return {habitLegend, habitData, yAxisMax}\n    }\n\n    const renderChart = () => {\n        // show empty chart for month/year has no data\n        if (convertMonthData().yAxisMax === 1) {\n            if (props.datePickerFormat.length === 5) { // month\n                return (\n                    <div>\n                        <DiscreteColorLegend\n                            orientation=\"horizontal\"\n                            items={[]}\n                        />\n                        <XYPlot stackBy=\"y\"\n                                xDomain={[1, daysPerMonth(`${props.datePicker}`)]}\n                                yDomain={[0, 6]} \n                                width={480}\n                                height={300}>\n                            <HorizontalGridLines />\n                            <XAxis attr=\"x\"\n                                    attrAxis=\"y\"\n                                    orientation=\"bottom\"\n                                    title={`day (${MONTH_LIST[props.datePicker.getMonth()]}, ${props.datePicker.getFullYear()})`}/>\n                            <YAxis attr=\"y\"\n                                    attrAxis=\"x\"\n                                    orientation=\"left\"\n                                    title=\"time spent(hr)\"/>\n                            <VerticalBarSeries\n                                color=''\n                                barWidth={0.4}\n                                data={[{x:0,y:0}]}\n                                style={{}}\n                            />\n                        </XYPlot>\n                    </div>\n                )\n            } else { // year\n                return (\n                    <div>\n                        <DiscreteColorLegend\n                            orientation=\"horizontal\"\n                            items={[]}\n                        />\n                        <XYPlot stackBy=\"y\"\n                                xDomain={[0, 12]}\n                                yDomain={[0, 6]} \n                                width={480}\n                                height={300}>\n                            <HorizontalGridLines />\n                            <XAxis attr=\"x\"\n                                    attrAxis=\"y\"\n                                    orientation=\"bottom\"\n                                    title={`(Month of ${props.datePicker.getFullYear()})`}/>\n                            <YAxis attr=\"y\"\n                                    attrAxis=\"x\"\n                                    orientation=\"left\"\n                                    title=\"time spent(hr)\"/>\n                            <VerticalBarSeries\n                                color=''\n                                barWidth={0.4}\n                                data={[{x:0,y:0}]}\n                                style={{}}\n                            />\n                        </XYPlot>\n                    </div>\n                )\n            }\n        }\n\n        if (props.datePickerFormat.length === 5) { // month data\n            if (props.habitId === -1) {\n                let itemArray: legendinfo[] = new Array();\n                const legendItems = () => {\n                    for (const habit in convertMonthData().habitLegend) {\n                        itemArray.push(convertMonthData().habitLegend[habit]);\n                    }\n                    return itemArray;\n                }\n                const dataBar = () => {\n                    let barCollection = [];\n                    for (const habit in convertMonthData().habitData) {\n                        barCollection.push([convertMonthData().habitData[habit], convertMonthData().habitLegend[habit].color])\n                    }\n                    return barCollection;\n                }\n\n                return (\n                    <div>\n                        <DiscreteColorLegend\n                            orientation=\"horizontal\"\n                            items={legendItems()}\n                        />\n                        <XYPlot stackBy=\"y\"\n                                xDomain={[1, daysPerMonth(`${props.datePicker}`)]}\n                                yDomain={[0, convertMonthData().yAxisMax]} \n                                width={480}\n                                height={300}>\n                            <HorizontalGridLines />\n                            <XAxis attr=\"x\"\n                                    attrAxis=\"y\"\n                                    orientation=\"bottom\"\n                                    title={`day (${MONTH_LIST[props.datePicker.getMonth()]}, ${props.datePicker.getFullYear()})`}/>\n                            <YAxis attr=\"y\"\n                                    attrAxis=\"x\"\n                                    orientation=\"left\"\n                                    title=\"time spent (hr)\"/>\n                            {dataBar().map((habitObj: any) => {\n                                return <VerticalBarSeries key={habitObj[1]}\n                                                        color={habitObj[1]}\n                                                        barWidth={0.4}\n                                                        data={habitObj[0]}\n                                                        style={{}}\n                            />\n                            })}\n                        </XYPlot>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <DiscreteColorLegend\n                            orientation=\"horizontal\"\n                            items={[convertMonthData().habitLegend[props.habitId]]}\n                        />\n                        <XYPlot stackBy=\"y\"\n                                xDomain={[1, daysPerMonth(`${props.datePicker}`)]}\n                                yDomain={[0, convertMonthData().yAxisMax]} \n                                width={480}\n                                height={300}>\n                            <HorizontalGridLines />\n                            <XAxis attr=\"x\"\n                                    attrAxis=\"y\"\n                                    orientation=\"bottom\"\n                                    title={`day (${MONTH_LIST[props.datePicker.getMonth()]}, ${props.datePicker.getFullYear()})`}/>\n                            <YAxis attr=\"y\"\n                                    attrAxis=\"x\"\n                                    orientation=\"left\"\n                                    title=\"time spent(hr)\"/>\n                            <VerticalBarSeries\n                                color='#19CDD7'\n                                barWidth={0.4}\n                                data={convertMonthData().habitData[props.habitId]}\n                                style={{}}\n                            />\n                        </XYPlot>\n                    </div>\n                )\n            }\n        } else { // year data\n            if (props.habitId === -1) {\n                let itemArray: legendinfo[] = new Array();\n                const legendItems = () => {\n                    for (const habit in convertMonthData().habitLegend) {\n                        itemArray.push(convertMonthData().habitLegend[habit]);\n                    }\n                    return itemArray;\n                }\n                const dataBar = () => {\n                    let barCollection = [];\n                    for (const habit in convertMonthData().habitData) {\n                        barCollection.push([convertMonthData().habitData[habit], convertMonthData().habitLegend[habit].color])\n                    }\n                    return barCollection;\n                }\n\n                return (\n                    <div>\n                        <DiscreteColorLegend\n                            orientation=\"horizontal\"\n                            items={legendItems()}\n                        />\n                        <XYPlot stackBy=\"y\"\n                                xDomain={[1, 12]}\n                                yDomain={[0, convertMonthData().yAxisMax]} \n                                width={480}\n                                height={300}>\n                            <HorizontalGridLines />\n                            <XAxis attr=\"x\"\n                                    attrAxis=\"y\"\n                                    orientation=\"bottom\"\n                                    title={`(Month of ${props.datePicker.getFullYear()})`}/>\n                            <YAxis attr=\"y\"\n                                    attrAxis=\"x\"\n                                    orientation=\"left\"\n                                    title=\"time spent (hr)\"/>\n                            {dataBar().map((habitObj: any) => {\n                                return <VerticalBarSeries key={habitObj[1]}\n                                                        color={habitObj[1]}\n                                                        barWidth={0.4}\n                                                        data={habitObj[0]}\n                                                        style={{}}\n                            />\n                            })}\n                        </XYPlot>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <DiscreteColorLegend\n                            orientation=\"horizontal\"\n                            items={[convertMonthData().habitLegend[props.habitId]]}\n                        />\n                        <XYPlot stackBy=\"y\"\n                                xDomain={[1, 12]}\n                                yDomain={[0, convertMonthData().yAxisMax]} \n                                width={480}\n                                height={300}>\n                            <HorizontalGridLines />\n                            <XAxis attr=\"x\"\n                                    attrAxis=\"y\"\n                                    orientation=\"bottom\"\n                                    title={`(Month of ${props.datePicker.getFullYear()})`}/>\n                            <YAxis attr=\"y\"\n                                    attrAxis=\"x\"\n                                    orientation=\"left\"\n                                    title=\"time spent(hr)\"/>\n                            <VerticalBarSeries\n                                color='#19CDD7'\n                                barWidth={0.4}\n                                data={convertMonthData().habitData[props.habitId]}\n                                style={{}}\n                            />\n                        </XYPlot>\n                    </div>\n                )\n            }\n        }\n    }\n    \n    return (\n        <div>\n            {renderChart()}\n        </div>\n    );\n}\n\nexport default VerticalBar;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Alert } from \"react-bootstrap\";\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport HabitList from '../habit/HabitList';\nimport HabitTrackerForm from './HabitTrackerForm';\nimport HabitTrackerList from './HabitTrackerList';\nimport VerticalBar from './VerticalBar';\nimport './HabitTracker.css';\n\ntype stateType = {\n  currentUser: any,\n  location?: any,\n}\n\nconst HabitTracker: React.FC<stateType> = (props) => {\n  const [selectedHabitId, setSelectedHabitId] = useState<number>(-1);\n  const [habitTrackerList, setHabitTrackerList] = useState<Array<object>>([]);\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  const [startDate, setStartDate] = useState<Date>(new Date());\n  const [datePickerFormat, setDatePickerFormat] = useState<string>(\"month\")\n  const [errorVisible, setErrorVisible] = useState<boolean>(false);\n\n  const getHabitIdUrlParameter = (localdata: string) => {\n    const splitted = localdata.split(\"/\")\n    const habitId = Number(splitted[splitted.length-1])\n    if (!isNaN(habitId)) {\n      setSelectedHabitId(habitId);\n    }\n  };\n\n  const onShowAlert = () => {\n    setErrorVisible(true) // true\n    const timer = window.setTimeout(()=>{\n      setErrorVisible(false) // false\n    },4000);\n    return () => clearTimeout(timer);\n  }\n\n  // Invoke selected habit card\n  useEffect(() => {\n    getHabitIdUrlParameter(props.location.pathname);\n  }, [selectedHabitId]);\n\n  const addHabitTracker = (habitTracker: any) => {\n    axios.post(`${API_BASE_URL}/habit/${habitTracker.habitId}/habitTracker`, habitTracker, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        const updatedHabitTracker = [...habitTrackerList, response.data];\n        setHabitTrackerList(updatedHabitTracker);\n        setErrorMessage('Successufully add a new Habit Record');\n        onShowAlert();\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to add a new habit record`);\n      });\n  }\n\n  const toSelectHabit = (habitId: number) => {\n    setSelectedHabitId(habitId)\n  }\n\n  const cancelSelectHabit = () => {\n    setSelectedHabitId(-1)\n  }\n\n  const selectDateFormat = (format: string) => {\n    setDatePickerFormat(format)\n  }\n\n  const datePicker = (format: string) => {\n    if (format.length === 5) {\n      return (\n        <DatePicker\n          selected={startDate}\n          onChange={(date: Date) => setStartDate(date)}\n          dateFormat=\"MM/yyyy\"\n          showMonthYearPicker\n          showFullMonthYearPicker\n        />\n      );\n    } else {\n      return (\n        <DatePicker\n          selected={startDate}\n          onChange={(date: Date) => setStartDate(date)}\n          showYearPicker\n          dateFormat=\"yyyy\"\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"container component-bkgd pt-5 p-4\">\n      {errorVisible && errorMessage.includes('Successuful') ? <Alert variant=\"success\" className=\"text-center\" >{errorMessage}</Alert> : null}\n      <h1 className=\"mb-5 text-center\">Habit Tracker</h1>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <div className=\"d-flex justify-content-between\">\n            <p className=\"pl-3\">{selectedHabitId === -1 ? \"Pick one Habit\" : `Selected Habit#${selectedHabitId}`}</p>\n            <Link to=\"/habitTracker\">\n              <button className=\"btn btn-outline-secondary btn-sm\"\n                      disabled={selectedHabitId === -1}\n                      onClick={cancelSelectHabit}>\n                      Overview\n              </button>\n            </Link>\n          </div>\n          {selectedHabitId === -1 ? null :\n          <div>\n            <HabitList currentUser={props.currentUser}\n                        habitPage={false}\n                        selectHabit={toSelectHabit}\n                        habitId={selectedHabitId} />\n            <hr className=\"style1\"></hr>\n          </div>}\n          <h5 className=\"mb-2 text-center\">Habit List</h5>\n          <HabitList currentUser={props.currentUser}\n                      habitPage={false}\n                      selectHabit={toSelectHabit}\n                      habitId={-1}/>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"d-flex justify-content-end mb-2\">\n            {datePicker(datePickerFormat)}\n            <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n              <button className=\"btn btn-outline-secondary btn-sm active\"\n                      onClick={(e: React.MouseEvent<HTMLElement>) => selectDateFormat(\"month\")}>Month\n                      <input type=\"radio\" name=\"options\" id=\"option1\" data-autocomplete=\"off\" ></input>\n              </button> \n              <button className=\"btn btn-outline-secondary btn-sm\"\n                      onClick={(e: React.MouseEvent<HTMLElement>) => selectDateFormat(\"year\")}>Year\n                      <input type=\"radio\" name=\"options\" id=\"option2\" data-autocomplete=\"off\"></input>\n              </button>\n            </div>\n          </div>\n          <div className=\"card w-100 d-inline-flex p-2 bd-highlight mb-2\">\n            <VerticalBar currentUser={props.currentUser}\n                          habitId={selectedHabitId} \n                          datePickerFormat={datePickerFormat}\n                          datePicker={startDate}/> \n          </div>\n          <hr className=\"style1\"></hr>\n          <div className=\"card w-100 d-inline-flex p-2 bd-highlight mb-2\">\n            <div className=\"card-body p-1\">\n              <HabitTrackerForm habitId={selectedHabitId}\n                                addHabitTrackerCallback={addHabitTracker}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3\">\n          <h5 className=\"mb-2 text-center\">{selectedHabitId === -1 ? \"Habit Records\" : `Records for Habit#${selectedHabitId}`}</h5>\n          <HabitTrackerList currentUser={props.currentUser}\n                            habitId={selectedHabitId}/>\n        </div>\n    </div>\n  </div>\n  );\n}\n\nexport default HabitTracker;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Link, Switch } from 'react-router-dom';\n\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport UpdateHabitForm from './UpdateHabitForm';\nimport HabitTracker from '../habitTracker/HabitTracker';\nimport './Habit.css';\n\ntype stateType = {\n    key?: number;\n    id: number;\n    title: string;\n    goal: string;\n    description: string;\n    streak: string;\n    habitBuilt: boolean;\n    createdDate: string;\n    deleteHabitCallback: {(habitId: number): void;};\n    selectHabit: {(habitId: number): void;};\n    habitPage: boolean;\n}\n\nconst HabitCard: React.FC<stateType> = (props) => {\n  const [update, setUpdate] = useState<Boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  useEffect(() => {\n  }, [update]);\n\n  const updateHabit = (habitobj: any) => {\n    axios.put(`${API_BASE_URL}/habit/${props.id}`, {...habitobj, id: props.id}, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        setErrorMessage(`Habit ${ props.id} updated`);\n        setUpdate(false)\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to update habit ${ props.id }`);\n      })\n  }\n\n  const streakBadge = (badge: string) => {\n    if (badge.startsWith(\"d\")) {\n      return (\n        <span className=\"badge badge-pill badge-primary text-capitalize\">\n          {badge}\n        </span>\n      )\n    } else if (badge.startsWith(\"w\")) {\n      return (\n        <span className=\"badge badge-pill badge-warning text-capitalize\">\n          {badge}\n        </span>\n      )\n    } else if (badge.startsWith(\"m\")) {\n      return (\n        <span className=\"badge badge-pill badge-secondary text-capitalize\">\n          {badge}\n        </span>\n      )\n    } else {\n      return (\n        <span className=\"badge badge-pill badge-dark text-capitalize\">\n          {badge}\n        </span>\n      )\n    }\n  }\n\n  const cancelUpdateHabit = () => {\n    setUpdate(false)\n  }\n  \n  return (\n    <div className=\"card w-100 d-inline-flex p-2 bd-highlight mb-2\">\n      <div className=\"card-body p-1\">\n        {update ? <UpdateHabitForm id={props.id}\n                                    title={props.title}\n                                    goal={props.goal}\n                                    description={props.description}\n                                    streak={props.streak}\n                                    habitBuilt={props.habitBuilt}\n                                    updateHabitCallback={updateHabit}\n                                    cancelUpdateHabitCallback={cancelUpdateHabit} /> : (\n        <div>\n          <div className=\"d-flex\">\n            <div className=\"p-1\">\n              {streakBadge(props.streak)}\n            </div>\n            <div className={props.habitBuilt ? \"p-1\": \"\"}>\n              <span className=\"badge badge-pill badge-success\">\n                {props.habitBuilt ? (props.habitPage ? \n                  <div>  \n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-award\" viewBox=\"0 0 16 16\">\n                      <path d=\"M9.669.864L8 0 6.331.864l-1.858.282-.842 1.68-1.337 1.32L2.6 6l-.306 1.854 1.337 1.32.842 1.68 1.858.282L8 12l1.669-.864 1.858-.282.842-1.68 1.337-1.32L13.4 6l.306-1.854-1.337-1.32-.842-1.68L9.669.864zm1.196 1.193l.684 1.365 1.086 1.072L12.387 6l.248 1.506-1.086 1.072-.684 1.365-1.51.229L8 10.874l-1.355-.702-1.51-.229-.684-1.365-1.086-1.072L3.614 6l-.25-1.506 1.087-1.072.684-1.365 1.51-.229L8 1.126l1.356.702 1.509.229z\"/>\n                      <path d=\"M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1 4 11.794z\"/>\n                    </svg>\n                    It's part of My Life\n                  </div> : \n                  <div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-award\" viewBox=\"0 0 16 16\">\n                      <path d=\"M9.669.864L8 0 6.331.864l-1.858.282-.842 1.68-1.337 1.32L2.6 6l-.306 1.854 1.337 1.32.842 1.68 1.858.282L8 12l1.669-.864 1.858-.282.842-1.68 1.337-1.32L13.4 6l.306-1.854-1.337-1.32-.842-1.68L9.669.864zm1.196 1.193l.684 1.365 1.086 1.072L12.387 6l.248 1.506-1.086 1.072-.684 1.365-1.51.229L8 10.874l-1.355-.702-1.51-.229-.684-1.365-1.086-1.072L3.614 6l-.25-1.506 1.087-1.072.684-1.365 1.51-.229L8 1.126l1.356.702 1.509.229z\"/>\n                      <path d=\"M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1 4 11.794z\"/>\n                    </svg>\n                  </div>): \"\"}\n              </span>\n            </div>\n            <div className=\"ml-auto p-1\">\n              <Switch>\n                {props.habitPage ?\n                  <div>\n                    <Link to={`/habitTracker/habit/${props.id}`}>View Record</Link>\n                    <Route className=\"mb-2\"\n                          path={`/habitTracker/habit/${props.id}`}\n                          component={ HabitTracker }\n                          currentHabit={ props.id }></Route> \n                  </div> :\n                  <div>\n                    <Link to=\"/habitTracker\">\n                      <button className=\"btn btn-outline-secondary btn-sm\"\n                              onClick={(e: React.MouseEvent<HTMLElement>) => props.selectHabit(props.id)}>Select\n                      </button>\n                    </Link>\n                  </div>\n                }\n              </Switch>\n            </div>\n          </div>\n\n          <div>\n              <h5 className=\"card-title\">#{props.id} - {props.title}</h5>\n              <h6>Goal: {props.goal}</h6>\n          </div>\n          {props.habitPage ?\n          <div className=\"card-text\">\n              <hr className=\"my-1\"></hr>\n              <p>{props.description}</p>\n          </div> : null}\n        </div>\n        )}\n      </div>\n      <div className=\"card-footer d-flex justify-content-between p-0\">\n        <div>Start date: {props.createdDate}</div>\n        {props.habitPage ?\n        <div className=\"d-flex justify-content-end\">\n          {/* delete button */}\n          <div>\n            <button type=\"button\" className=\"btn btn-outline-danger mr-2 btn-sm btn-size\" data-toggle=\"modal\" data-target={`#habit#${props.id}`}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n              </svg>\n            </button>\n            <div className=\"modal\" id={`habit#${props.id}`}>\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-body\">\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                    Delete Habit#{props.id} - {props.title}\n                  </div>\n                  <div className=\"modal-footer p-0\">\n                    <button type=\"button\" \n                            className=\"btn btn-outline-danger btn-sm\" \n                            data-dismiss=\"modal\"\n                            onClick={() => props.deleteHabitCallback(props.id)}>Delete</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {update ? null : \n          // edit button\n          <button\n              onClick={(e: React.MouseEvent<HTMLElement>) => setUpdate(true)}\n              className=\"btn btn-outline-info btn-sm\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\n                  <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/>\n                </svg>\n          </button>}\n        </div> : null}\n      </div>\n    </div>\n    )\n}\n\nexport default HabitCard;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport HabitCard from './HabitCard';\n\ntype stateType = {\n  currentUser: any;\n  habitPage: boolean;\n  habitId: number;\n  selectHabit: {(habitId: number): void;};\n}\n\nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric' };\n\nconst HabitList: React.FC<stateType> = (props) => {\n  const [habitList, setHabitList] = useState<Array<object>>([]);\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/habits/${props.currentUser.id}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        const apiHabitList = response.data;\n        if (apiHabitList.length !== 0) {\n          setHabitList([...apiHabitList]);\n        } else {\n          setHabitList(apiHabitList)\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  }, []); // [habitList] to infinity loop\n\n  const deleteHabit = (habitId: number) => {\n    const updatedHabitList = habitList.filter((habit: any) => {\n      return habit.id !== habitId;\n    });\n\n    if (updatedHabitList.length < habitList.length) {\n      axios.delete(`${API_BASE_URL}/habit/${habitId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n        .then((response) => {\n          setErrorMessage(`Successfully deleted habit#${ habitId }`);\n        })\n        .catch((error) => {\n          setErrorMessage(`Unable to delete habit ${ habitId }`);\n        })\n      setHabitList(updatedHabitList);\n    }\n  }\n\n  const filterHabitComponent = habitList.filter((habit: any) => habit.id === props.habitId).map((filteredHabit: any) => {\n    return (\n      <HabitCard\n        key={filteredHabit.id}\n        id={filteredHabit.id}\n        title={filteredHabit.title}\n        goal={filteredHabit.goal}\n        description={filteredHabit.description}\n        streak={filteredHabit.streak}\n        habitBuilt={filteredHabit.habitBuilt}\n        createdDate={(new Date(filteredHabit.createdDate)).toLocaleDateString('en-US', DATE_OPTIONS)}\n        deleteHabitCallback={deleteHabit}\n        selectHabit={props.selectHabit}\n        habitPage={props.habitPage}\n      />\n    )\n  })\n\n  const habitComponents = habitList.map((habit: any) => {\n    return (\n      <HabitCard\n        key={habit.id}\n        id={habit.id}\n        title={habit.title}\n        goal={habit.goal}\n        description={habit.description}\n        streak={habit.streak}\n        habitBuilt={habit.habitBuilt}\n        createdDate={(new Date(habit.createdDate)).toLocaleDateString('en-US', DATE_OPTIONS)}\n        deleteHabitCallback={deleteHabit}\n        selectHabit={props.selectHabit}\n        habitPage={props.habitPage}\n      />\n    )\n  })\n\n  return (\n    <div>\n        {props.habitId === -1 ? habitComponents : filterHabitComponent}\n    </div>\n  )\n}\n\nexport default HabitList;","import React from 'react';\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport '../friendship/FriendCard.css';\nimport '../habit/Habit.css';\n\ntype stateType = {\n    key: number;\n    id: number;\n    createdDate: string;\n    text: string;\n    imageUrl: string;\n    habit: apiHabit;\n    friend: apiFriend; \n    deleteMsgCallback: {(habitMsgId: number): void;}\n}\n\ntype apiHabit = {\n    id: number;\n    title: string;\n    goal: string;\n    description: string;\n    enjoyer: object;\n    habitBuilt: boolean;\n    streak: string;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n\ntype apiFriend = {\n    id: number;\n    name: string\n    about: string;\n    email: string;\n    emailVerified: boolean;\n    imageUrl: string;\n    password: string;\n    provider: string;\n    providerId: number;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n\nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n\nconst MsgCard: React.FC<stateType> = (props) => {\n  return (\n    <div className=\"card w-100 p-2 bd-highlight mb-2 text-left\">\n      <div className=\"card-body p-0\">\n        <div className=\"p-0 font-weight-bold\">From: \n          <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip id={`tooltip-$\"top\"`}>{props.friend.email}</Tooltip>}>\n              <Button variant=\"outline-light\">\n              <img className=\"pro-img rounded-circle border border-secondary\" src={props.friend.imageUrl} alt={props.friend.name}/>\n              </Button>\n          </OverlayTrigger>\n        {props.friend.name}</div>\n        <div>For #{props.habit.id} - {props.habit.title}</div>\n\n        <div className=\"card\">\n          <img className=\"card-img-top\" src={props.imageUrl} alt=\"Card image cap\"/>\n          <div className=\"card-body\">\n            <p className=\"card-text\">{props.text}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-footer d-flex justify-content-between p-0\">\n        <div>\n          {(new Date(props.createdDate)).toLocaleString('en-US', DATE_OPTIONS)}\n        </div>\n        <div>\n            <button type=\"button\" className=\"btn btn-outline-danger mr-2 btn-sm btn-size\" data-toggle=\"modal\" data-target={`#habitMsg#${props.id}`}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x\" viewBox=\"0 0 16 16\">\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n              </svg>\n            </button>\n            <div className=\"modal\" id={`habitMsg#${props.id}`}>\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-body\">\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                    Delete Message from {props.friend.name} for habit#{props.habit.id}\n                  </div>\n                  <div className=\"modal-footer p-0\">\n                    <button type=\"button\" \n                            className=\"btn btn-outline-danger btn-sm\" \n                            data-dismiss=\"modal\"\n                            onClick={() => props.deleteMsgCallback(props.id)}>Delete</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n    )\n}\n\nexport default MsgCard;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport MsgCard from './MsgCard';\n\ntype stateType = {\n  currentUser: any;\n}\n\ntype apiMsg = {\n  id: number;\n  createdDate: string;\n  lastModifiedDate: string;\n  text: string;\n  imageUrl: string;\n  habit: apiHabit;\n  friend: apiFriend; \n}\n\ntype apiHabit = {\n    id: number;\n    title: string;\n    goal: string;\n    description: string;\n    enjoyer: object;\n    habitBuilt: boolean;\n    streak: string;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n\ntype apiFriend = {\n    id: number;\n    name: string\n    about: string;\n    email: string;\n    emailVerified: boolean;\n    imageUrl: string;\n    password: string;\n    provider: string;\n    providerId: number;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n\nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric' };\n\nconst MsgList: React.FC<stateType> = (props) => {\n  const [habitMsgList, setHabitMsgList] = useState<Array<apiMsg>>([]);\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/habitMsgs/${props.currentUser.id}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        const apiHabitMsgList = response.data;\n        if (apiHabitMsgList.length !== 0) {\n          setHabitMsgList([...apiHabitMsgList]);\n        } else {\n          setHabitMsgList(apiHabitMsgList)\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  }, []); // [habitMsgList] to infinity loop\n\n  const deleteHabitMsg = (habitMsgId: number) => {\n    axios.delete(`${API_BASE_URL}/habitMsg/${habitMsgId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        setErrorMessage(`HabitMsg ${ habitMsgId } deleted`);\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to delete habitMsg ${ habitMsgId }`);\n    })\n  }\n\n  const msgComponents = habitMsgList.map((habitMsg: apiMsg) => {\n    return (\n      <MsgCard key={habitMsg.id}\n               id={habitMsg.id}\n               imageUrl={habitMsg.imageUrl}\n               createdDate={habitMsg.createdDate}\n               text={habitMsg.text}\n               habit={habitMsg.habit}\n               friend={habitMsg.friend}\n               deleteMsgCallback={deleteHabitMsg}\n      />\n    )\n  })\n\n  return (\n    <div>\n        {msgComponents}\n    </div>\n  )\n}\n\nexport default MsgList;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Alert } from \"react-bootstrap\";\n\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport NewHabitForm from './NewHabitForm';\nimport HabitList from './HabitList';\nimport MsgList from '../habitMsg/MsgList';\nimport './Habit.css';\n\ntype stateType = {\n  currentUser: any,\n}\n\nconst Habit: React.FC<stateType> = (props) => {\n  const [errorMessage, setErrorMessage] = useState<String>('');\n  const [errorVisible, setErrorVisible] = useState<boolean>(false);\n\n  const addHabit = (habit: any) => {\n    axios.post(`${API_BASE_URL}/enjoyer/${props.currentUser.id}/habit`, habit, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        setErrorMessage('Successufully add a new Habit');\n        onShowAlert();\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to add a new habit`);\n      });\n  }\n\n  const onShowAlert = () => {\n    setErrorVisible(true) // true\n    const timer = window.setTimeout(()=>{\n      setErrorVisible(false) // false\n    },4000);\n    return () => clearTimeout(timer);\n  }\n\n  // fake function to save line 44\n  const toSelectHabit = (habitId: number) => {\n    return null\n  }\n\n  return (\n    <div className=\"container component-bkgd pt-5 p-4\">\n      {errorVisible && errorMessage.includes('Successuful') ? <Alert variant=\"success\" className=\"text-center\" >{errorMessage}</Alert> : null}\n      <h1 className=\"mb-5 text-center\">Your Habits</h1>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <NewHabitForm addHabitCallback={addHabit}/>\n        </div>\n        <div className=\"col-6\">\n          <HabitList currentUser={props.currentUser}\n                      selectHabit={toSelectHabit}\n                      habitPage={true}\n                      habitId={-1}/>\n        </div>\n        <div className=\"col-3\">\n          <h5 className=\"text-center mb-3\">Messages from friends</h5>\n          <MsgList currentUser={props.currentUser} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Habit;","import React, { useState } from 'react';\n\ntype stateType = {\n    searchEmailCallback: {(query: string): void};\n    resetCallback: {(): void};\n}\n\ntype form ={\n  text: string\n}\n\nconst Search: React.FC<stateType> = (props) => {\n  const [formFields, setFormFields] = useState<form>({text: \"\"})\n\n  // event handlers for input\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  const clearSubmit = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setFormFields({\n      text: \"\"\n    })\n    props.resetCallback()\n  }\n\n  const onFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    props.searchEmailCallback(formFields.text);\n\n    setFormFields({\n      text: \"\"\n    })\n  }\n\n  return (\n    <div className=\"container\">\n        <h6>Search and Add a friend</h6>\n        <form onSubmit={onFormSubmit} className=\"input-group\">\n          <input id=\"text\"\n                  name=\"text\"\n                  onChange={onInputChange}\n                  value={formFields.text}\n                  className=\"form-control d-inline\"\n                  type=\"text\"\n                  placeholder=\"Search by email\" />\n          {/* clear butotn */}\n          <button className=\"btn btn-outline-secondary btn-sm ml-1 d-inline\" \n                  onClick={clearSubmit}\n                  type=\"button\"> \n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle\" viewBox=\"0 0 16 16\">\n              <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n              <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n          </button>\n          {/* search button */}\n          <button className=\"btn btn-outline-info btn-sm ml-1 d-inline\" \n                  type=\"submit\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n            </svg>\n          </button>\n        </form>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport './SearchResult.css';\nimport './FriendCard.css';\n\ntype stateType = {\n    email: string;\n    addFriendCallback: {(receiver: friend): void};\n    resetCallback: {(): void};\n    friendList: apiFriendship;\n    currentUser: any,\n}\n\ntype friend = {\n    id: number;\n    imageUrl: string;\n    name: string;\n    email: string;\n    about: string;\n}\n\n// user data structure from server\ntype apiFriendship = {\n    requester: Array<friendship>;\n    receiver: Array<friendship>;\n}\n  \ntype apiFriend = {\n    id: number;\n    name: string\n    about: string;\n    email: string;\n    emailVerified: boolean;\n    imageUrl: string;\n    password: string;\n    provider: string;\n    providerId: number;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n\ntype friendship = {\n    id: number;\n    requester: apiFriend;\n    receiver: apiFriend;\n    activated: boolean;\n    createdDate: string;\n    lastModifiedDate: string; \n}\n\nconst SearchResult: React.FC<stateType> = (props) => {\n    const [findFriend, setFindFriend] = useState<friend>({id: -1, imageUrl: '', name: '', email: '', about: ''})\n    const [errorMessage, setErrorMessage] = useState<String>('');\n\n    useEffect(() => {\n        axios.get(`${API_BASE_URL}/enjoyer/email/${props.email}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n          .then((response) => {\n            const apiUser = response.data;\n            if (props.currentUser.id !== apiUser.id) {\n                setFindFriend({...apiUser})\n                setErrorMessage('')\n            } else {\n                setErrorMessage(`Error: Ha, don't search yourself.`)\n            }\n          })\n          .catch((error) => {\n            setErrorMessage(`Error: Unable to find the email`)\n        });\n    }, []); \n\n    const addFriend = (e: React.MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        props.addFriendCallback(findFriend)\n        setFindFriend({id: -1, imageUrl: '', name: '', email: '', about: ''})\n        props.resetCallback()\n    }\n\n    const disableAddFriendButton = () => {\n        let disable: boolean = false;\n        let activated: boolean = false;\n        // check currentUser's requester list \n        const userRequester = props.friendList.requester.filter((friendship) => friendship.receiver.id === findFriend.id) \n        if (userRequester.length === 1) {\n            disable = true;\n            if (userRequester[0].activated) {\n                activated = true;\n            } \n        }\n        // check currentUser's receiver list \n        const userReceiver = props.friendList.receiver.filter((friendship) => friendship.requester.id === findFriend.id) \n        if (userReceiver.length === 1) {\n            disable = true;\n            if (userReceiver[0].activated) {\n                activated = true;\n            } \n        }\n        return {disable, activated}\n    }\n\n    return (\n        <div>\n            {findFriend.email.length === 0 ?<div className=\"alert alert-warning alert-dismissible p-1 mt-2 mb-1\">{errorMessage}</div> : \n            <div className=\"card d-inline-flex mt-2\">\n                <div className=\"card-body p-1\">\n                    <img className=\"pro-img rounded-circle border border-secondary mr-1\" src={findFriend.imageUrl} alt={findFriend.name}/>\n                    {findFriend.name}\n                    <OverlayTrigger\n                        placement=\"top\"\n                        overlay={<Tooltip id={`tooltip-$\"top\"`}>{disableAddFriendButton().activated ? `${findFriend.name} is your friend already` : (disableAddFriendButton().disable ? \"Friend request pending\" : \"add friend\")}</Tooltip>}>\n                        <Button onClick={addFriend}\n                                variant=\"outline-success ml-2 btn-sm\"\n                                disabled={disableAddFriendButton().disable}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-person-plus\" viewBox=\"0 0 16 16\">\n                                <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\n                                <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\n                            </svg>\n                        </Button>\n                    </OverlayTrigger>\n                </div>\n                <div className=\"card-body p-1\">\n                    <h6 className=\"card-title font-weight-bold\"> About {findFriend.name}</h6>\n                    <p className=\"card-text font-weight-light\">{findFriend.about === null ? \"TBD...\" : findFriend.about}</p>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default SearchResult;\n","import React, { useState } from 'react';\n\ntype stateType = {\n    habit: selectHabit;\n    addMessageCallback: {(msg: object): void;};\n    deselectFriendHabitCallback: {(habit: {habitId: number, friendName: string, friendImageUrl: string}): void;};\n}\n\ntype form = {\n    text: string;\n    imageUrl: string;\n}\n\ntype selectHabit = {\n  habitId: number; \n  friendName: string; \n  friendImageUrl: string;\n}\n\nconst NewMessageForm: React.FC<stateType> = (props) => {\n  const [formFields, setFormFields] = useState<form>({text: '', imageUrl: 'https://images.pexels.com/photos/2740955/pexels-photo-2740955.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'});\n\n  // event handlers for textarea\n  const onTextareaChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  // event handlers for input\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = (event)=> {\n    setFormFields({...formFields, [event.target.name]: event.currentTarget.value})\n  }\n\n  const onFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    console.log(formFields)\n    props.addMessageCallback(formFields);\n\n    setFormFields({text: '', imageUrl: ''})\n  }\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      <h6 className=\"text-center\">{props.habit.habitId === -1 ? \"Pick a friend's habit\" :\n        <div className=\"text-left\">\n          <div className=\"d-flex justify-content-between\">\n            <h5>Message</h5>\n            <button\n              onClick={(e: React.MouseEvent<HTMLElement>) => props.deselectFriendHabitCallback({habitId: -1, friendName: '', friendImageUrl: ''})}\n              className=\"btn btn-outline-secondary mr-2 btn-sm\">\n              Cancel\n            </button>\n          </div>\n          <div className=\"mt-2\">\n            To: <img className=\"rounded-circle border border-secondary mr-1 ml-1\" src={props.habit.friendImageUrl} alt={props.habit.friendName}/>\n            {props.habit.friendName}'s Habit#{props.habit.habitId}\n          </div>\n        </div>}</h6>\n      <div className=\"form-group text-left\">\n        <textarea id=\"text\"\n                  name=\"text\"\n                  rows={4}\n                  onChange={onTextareaChange}\n                  value={formFields.text}\n                  className=\"form-control\" \n                  placeholder=\"You got this!\"\n                />\n        <label className=\"exampleInputEmail1 mt-3\">Add an image:</label>\n        <input id=\"imageUrl\"\n                name=\"imageUrl\"\n                onChange={onInputChange}\n                className=\"form-control\" \n                placeholder=\"An image url or default image...\"\n                />\n        <div className=\"mt-3 text-center\">\n          Default image:\n          <img className=\"rounded w-75\" src=\"https://images.pexels.com/photos/2740955/pexels-photo-2740955.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" alt=\"default encourage image\"/>\n        </div>\n        <div className=\"text-center\">\n          <button\n            type=\"submit\"\n            className={\"btn btn-outline-success mt-3 btn-sm\"}\n            disabled={props.habit.habitId === -1}\n            >Send Message\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default NewMessageForm;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport './FriendCard.css';\nimport '../habit/Habit.css';\n\n// type from parent component\ntype stateType = {\n  currentUser: any;\n  key: number;\n  id: number;\n  requesterId: number;\n  receiverId: number;\n  createdDate: string;\n  activated: boolean;\n  deleteFriendshipCallback: {(friendshipId: number): void;};\n  confirmFriendshipCallback: {(update: returnUpdateInfo): void;};\n}\n\n// type for update(confirm) the friendship\ntype returnUpdateInfo ={\n  friendshipId: number;\n  receiverId: number;\n}\n\n// type for data from server\ntype friend = {\n    id: number;\n    name: string\n    about: string;\n    email: string;\n    emailVerified: boolean;\n    imageUrl: string;\n    password: string;\n    provider: string;\n    providerId: number;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n  \nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric'};\n\nconst FriendCard: React.FC<stateType> = (props) => {\n  const [friend, setFriend] = useState<friend>({\n    id: -1,\n    name: '',\n    about: '',\n    email: '',\n    emailVerified: false,\n    imageUrl: '',\n    password: '',\n    provider: '',\n    providerId: -1,\n    createdDate: '',\n    lastModifiedDate: '',\n  })\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  useEffect(() => {\n    if (props.requesterId !== -1) {\n        axios.get(`${API_BASE_URL}/enjoyer/${props.requesterId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n          .then((response) => {\n            const apiFriend = response.data;\n            setFriend({...apiFriend});\n          })\n          .catch((error) => {\n            setErrorMessage(error.message);\n      });\n    } else if (props.receiverId !== -1) {\n        axios.get(`${API_BASE_URL}/enjoyer/${props.receiverId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n          .then((response) => {\n            const apiFriend = response.data;\n            setFriend({...apiFriend});\n          })\n          .catch((error) => {\n            setErrorMessage(error.message);\n      });\n    }\n  }, []); \n\n  return (\n    <div className=\"card w-100 d-inline-flex bd-highlight m-1\">\n      <div className=\"card-body p-0\">\n        <OverlayTrigger\n            placement=\"top\"\n            overlay={<Tooltip id={`tooltip-$\"top\"`}>{friend.email}</Tooltip>}>\n            <Button variant=\"outline-light\" className=\"pl-0\">\n              <img className=\"pro-img rounded-circle border border-secondary\" src={friend.imageUrl} alt={friend.name}/>\n            </Button>\n        </OverlayTrigger>\n        {friend.name}\n\n        <button type=\"button\" className=\"btn btn-outline-danger ml-2 btn-sm btn-size\" data-toggle=\"modal\" data-target={`#friendship#${props.id}`}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-person-x\" viewBox=\"0 0 16 16\">\n            <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\n            <path fill-rule=\"evenodd\" d=\"M12.146 5.146a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"/>\n          </svg>\n        </button>\n        <div className=\"modal\" id={`friendship#${props.id}`}>\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                Delete Friend {friend.name}\n              </div>\n              <div className=\"modal-footer p-0\">\n                <button type=\"button\" \n                        className=\"btn btn-outline-danger btn-sm\" \n                        data-dismiss=\"modal\"\n                        onClick={() => props.deleteFriendshipCallback(props.id)}>Delete</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"card-footer text-center p-0\">{props.activated ? `Friend since: ${(new Date(props.createdDate)).toLocaleString('en-US', DATE_OPTIONS)}` : \n        (\n          <div>\n            {props.receiverId !== -1 ? \"Request pending\" : \n            <button className=\"btn btn-outline-success btn-sm\"\n                    onClick={() => props.confirmFriendshipCallback({friendshipId: props.id,\n                      receiverId: props.currentUser.id})}>Confirm\n            </button> }\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default FriendCard;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport FriendCard from './FriendCard';\n\ntype stateType = {\n  currentUser: any;\n  friendList: apiFriendship;\n}\n\n// user data structure from server\ntype apiFriendship = {\n  requester: Array<friendship>;\n  receiver: Array<friendship>;\n}\n\ntype apiFriend = {\n  id: number;\n  name: string\n  about: string;\n  email: string;\n  emailVerified: boolean;\n  imageUrl: string;\n  password: string;\n  provider: string;\n  providerId: number;\n  createdDate: string;\n  lastModifiedDate: string;\n}\n\ntype friendship = {\n  id: number;\n  requester: apiFriend;\n  receiver: apiFriend;\n  activated: boolean;\n  createdDate: string;\n  lastModifiedDate: string; \n}\n\ntype returnUpdateInfo ={\n  friendshipId: number;\n  receiverId: number;\n}\n\nconst FriendList: React.FC<stateType> = (props) => {\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  const deleteFriendship = (friendshipId: number) => {\n    axios.delete(`${API_BASE_URL}/friendship/${friendshipId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        setErrorMessage(`Friendship ${ friendshipId } deleted`);\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to delete friendship ${ friendshipId }`);\n    })\n  }\n  const confirmFriendship = (update: returnUpdateInfo) => {\n    axios.put(`${API_BASE_URL}/friendship/${update.friendshipId}/receiver/${update.receiverId}`, update, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        setErrorMessage(`Friendship ${ update.friendshipId } is confirmed`);\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to confirm friendship ${ update.friendshipId }`);\n    })\n  }\n\n  const requesterComponents = props.friendList.requester.map((friendship) => {\n    return (\n      <FriendCard currentUser={props.currentUser}\n                  key={friendship.id}\n                  id={friendship.id}\n                  requesterId={-1}\n                  receiverId={friendship.receiver.id}\n                  createdDate={friendship.createdDate}\n                  activated={friendship.activated}\n                  deleteFriendshipCallback={deleteFriendship}\n                  confirmFriendshipCallback={confirmFriendship}/>\n    )\n  })\n\n  const receiverComponents = props.friendList.receiver.map((friendship) => {\n    return (\n      <FriendCard currentUser={props.currentUser}\n                  key={friendship.id}\n                  id={friendship.id}\n                  requesterId={friendship.requester.id}\n                  receiverId={-1}\n                  activated={friendship.activated}\n                  createdDate={friendship.createdDate}\n                  deleteFriendshipCallback={deleteFriendship}\n                  confirmFriendshipCallback={confirmFriendship}/>\n    )\n  })\n\n  return (\n    <div>\n        {requesterComponents}\n        <br/>\n        {receiverComponents}\n    </div>\n  )\n}\n\nexport default FriendList;","import React from 'react';\nimport './FriendCard.css';\n\ntype stateType = {\n    key: number;\n    id: number;\n    friendName: string;\n    friendImageUrl: string;\n    title: string;\n    goal: string;\n    habitBuilt: boolean;\n    createdDate: string;\n    selectFriendHabitCallback: {(habit: {habitId: number, friendName: string, friendImageUrl: string}): void;};\n}\n\nconst FriendHabitsCard: React.FC<stateType> = (props) => {\n\n  return (\n    <div className=\"card w-100 p-2 bd-highlight text-left mb-2\">\n      <div className=\"card-body p-1\">\n        <div className={props.habitBuilt ? \"d-flex justify-content-between\" : \"d-flex justify-content-end\"}>\n            <span className=\"badge badge-pill badge-success mb-2\">\n                {!props.habitBuilt ? \"\" : \n                <div>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-award\" viewBox=\"0 0 16 16\">\n                    <path d=\"M9.669.864L8 0 6.331.864l-1.858.282-.842 1.68-1.337 1.32L2.6 6l-.306 1.854 1.337 1.32.842 1.68 1.858.282L8 12l1.669-.864 1.858-.282.842-1.68 1.337-1.32L13.4 6l.306-1.854-1.337-1.32-.842-1.68L9.669.864zm1.196 1.193l.684 1.365 1.086 1.072L12.387 6l.248 1.506-1.086 1.072-.684 1.365-1.51.229L8 10.874l-1.355-.702-1.51-.229-.684-1.365-1.086-1.072L3.614 6l-.25-1.506 1.087-1.072.684-1.365 1.51-.229L8 1.126l1.356.702 1.509.229z\"/>\n                    <path d=\"M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1 4 11.794z\"/>\n                    </svg>\n                    It's part of My Life\n                </div> \n                }\n            </span>\n            <button className=\"btn btn-outline-secondary btn-sm\"\n                    onClick={(e: React.MouseEvent<HTMLElement>) => props.selectFriendHabitCallback({habitId: props.id, friendName: props.friendName, friendImageUrl: props.friendImageUrl})}>Send Message\n            </button>\n        </div>\n        <h6 className=\"font-weight-boldcard-title\"><img className=\"pro-img rounded-circle border border-secondary mr-1\" src={props.friendImageUrl} alt={props.friendName}/>{props.friendName}'s Habit#{props.id}</h6>\n        <div className=\"card-text\">\n          <div>Title: {props.title}</div>\n          <div>Goal: {props.goal}</div> \n        </div>\n      </div>\n      <div className=\"card-footer text-center p-0\">\n        Start date: {props.createdDate}\n      </div>\n    </div>\n    )\n}\n\nexport default FriendHabitsCard;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport FriendHabitsCard from './FriendHabitsCard';\n\ntype stateType = {\n  key: number;\n  friendId: number;\n  habitPage: boolean;\n  habitId: number;\n  selectFriendHabitCallback: {(habit: {habitId: number, friendName: string, friendImageUrl: string}): void;};\n}\n\nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric' };\n\nconst HabitList: React.FC<stateType> = (props) => {\n  const [habitList, setHabitList] = useState<Array<object>>([]);\n  const [errorMessage, setErrorMessage] = useState<String>('');\n\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/habits/${props.friendId}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        const apiHabitList = response.data;\n        if (apiHabitList.length !== 0) {\n          setHabitList([...apiHabitList]);\n        } else {\n          setHabitList(apiHabitList)\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n      });\n  }, [habitList.length]); // [habitList] to infinity loop\n\n  const friendHabitComponents = habitList.map((habit: any) => {\n    return (\n      <FriendHabitsCard key={habit.id}\n                        id={habit.id}\n                        friendName={habit.enjoyer.name}\n                        friendImageUrl={habit.enjoyer.imageUrl}\n                        title={habit.title}\n                        goal={habit.goal}\n                        habitBuilt={habit.habitBuilt}\n                        createdDate={(new Date(habit.createdDate)).toLocaleDateString('en-US', DATE_OPTIONS)}\n                        selectFriendHabitCallback={props.selectFriendHabitCallback}\n      />\n    )\n  })\n\n  return (\n    <div>\n        {friendHabitComponents}\n    </div>\n  )\n}\n\nexport default HabitList;","import React from 'react';\nimport FriendHabitsList from './FriendHabitsList';\n\ntype stateType = {\n  currentUser: any;\n  friendList: apiFriendship;\n  selectFriendHabitCallback: {(habit: {habitId: number, friendName: string, friendImageUrl: string}): void;};\n}\n\n// user data structure from server\ntype apiFriendship = {\n    requester: Array<friendship>;\n    receiver: Array<friendship>;\n}\n  \ntype apiFriend = {\n    id: number;\n    name: string\n    about: string;\n    email: string;\n    emailVerified: boolean;\n    imageUrl: string;\n    password: string;\n    provider: string;\n    providerId: number;\n    createdDate: string;\n    lastModifiedDate: string;\n}\n\ntype friendship = {\n    id: number;\n    requester: apiFriend;\n    receiver: apiFriend;\n    activated: boolean;\n    createdDate: string;\n    lastModifiedDate: string; \n}\n\nconst DATE_OPTIONS = { year: 'numeric', month: 'short', day: 'numeric' };\n\nconst FriendHabits: React.FC<stateType> = (props) => {\n\n  const requesterComponents = props.friendList.requester.filter((friendship) => friendship.activated === true).map((friendship) => {\n    return (\n        <FriendHabitsList key={friendship.receiver.id}\n                          friendId={friendship.receiver.id}\n                          selectFriendHabitCallback={props.selectFriendHabitCallback}\n                          habitPage={false}\n                          habitId={-1}/>\n    )\n  })\n\n  const receiverComponents = props.friendList.receiver.filter((friendship) => friendship.activated === true).map((friendship) => {\n    return (\n        <FriendHabitsList key={friendship.requester.id}\n                          friendId={friendship.requester.id}\n                          selectFriendHabitCallback={props.selectFriendHabitCallback}\n                          habitPage={false}\n                          habitId={-1}/>\n    )\n  })\n\n  return (\n    <div>\n        {requesterComponents}\n        {receiverComponents}\n    </div>\n  )\n}\n\nexport default FriendHabits;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Alert } from \"react-bootstrap\";\n\nimport { API_BASE_URL } from '../util/BaseUrl';\nimport Search from './Search';\nimport SearchResult from './SearchResult';\nimport NewMessageForm from '../habitMsg/NewMessageForm';\nimport FriendList from './FriendList';\nimport FriendHabits from './FriendHabits';\n\ntype stateType = {\n  currentUser: any,\n}\n\ntype friend = {\n  id: number;\n  imageUrl: string;\n  name: string;\n  email: string;\n}\n\n// user data structure from server\ntype apiFriend = {\n  id: number;\n  name: string\n  about: string;\n  email: string;\n  emailVerified: boolean;\n  imageUrl: string;\n  password: string;\n  provider: string;\n  providerId: number;\n  createdDate: string;\n  lastModifiedDate: string;\n}\n\ntype friendship = {\n  id: number;\n  requester: apiFriend;\n  receiver: apiFriend;\n  activated: boolean;\n  createdDate: string;\n  lastModifiedDate: string; \n}\n\ntype apiFriendship = {\n  requester: Array<friendship>;\n  receiver: Array<friendship>;\n}\n\ntype selectHabit = {\n  habitId: number; \n  friendName: string; \n  friendImageUrl: string;\n}\n\nconst Friendship: React.FC<stateType> = (props) => {\n  const [friendList, setFriendList] = useState<apiFriendship>({requester: [], receiver: []});\n  const [selectedHabit, setSelectedHabit] = useState<selectHabit>({habitId: -1, friendName: '', friendImageUrl: ''})\n  const [searchEmail, setSearchEmail] = useState<string>('')\n  const [errorMessage, setErrorMessage] = useState<String>('');\n  const [errorVisible, setErrorVisible] = useState<boolean>(false);\n\n  useEffect(() => {\n    axios.get(`${API_BASE_URL}/friendship/${props.currentUser.id}`, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n    .then((response) => {\n        const apiFriendList = response.data;\n        if (apiFriendList.length !== 0) {\n        setFriendList({...apiFriendList});\n        } else {\n        setFriendList(apiFriendList)\n        }\n    })\n    .catch((error) => {\n        setErrorMessage(error.message);\n    });\n  }, []); \n\n  const onShowAlert = () => {\n    setErrorVisible(true) // true\n    const timer = window.setTimeout(()=>{\n      setErrorVisible(false) // false\n    },4000);\n    return () => clearTimeout(timer);\n  }\n\n  const selectFriendHabit = (habit: selectHabit) => {\n    setSelectedHabit(habit)\n  }\n\n  const deselectFriendHabit = (habit: selectHabit) => {\n    setSelectedHabit(habit)\n  }\n\n  const setEmail = (query: string) => {\n    setSearchEmail(query)\n  }\n\n  const resetSearch = () => {\n    setSearchEmail('')\n  }\n\n  const addFriend = (receiver: friend) => {\n    axios.post(`${API_BASE_URL}/friendship/requester/${props.currentUser.id}/receiver/${receiver.id}`, receiver, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => { \n        setErrorMessage('Successufully send the friend request');\n        onShowAlert();\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to add this friend`);\n    });\n  }\n  \n  const addMessage = (msg: any) => {\n    axios.post(`${API_BASE_URL}/habit/${selectedHabit.habitId}/habitMsg/${props.currentUser.id}`, msg, { headers: { 'Authorization': `Bearer ${localStorage.accessToken}` } })\n      .then((response) => {\n        // msg is not for current user but for friends, no need for msg list \n        setErrorMessage('Successufully send the message');\n        onShowAlert();\n      })\n      .catch((error) => {\n        setErrorMessage(`Unable to add a new habit`);\n    });\n  }\n\n  return (\n      <div className=\"container component-bkgd pt-5 p-4\">\n        {errorVisible && errorMessage.includes('Successuful') ? <Alert variant=\"success\" className=\"text-center\" >{errorMessage}</Alert> : null}\n        <h1 className=\"mb-5 text-center\">Support your Friends</h1>\n        <div className=\"row\">\n          <div className=\"col-3 text-center\">\n            <h5 className=\"mb-2\">Friend List</h5>\n            <div>\n              <FriendList currentUser={props.currentUser}\n                          friendList={friendList}/>\n            </div>\n          </div>\n          <div className=\"col-5 text-center\">\n            <h5 className=\"mb-2\">Friends Habits</h5>\n            <div>\n              <FriendHabits currentUser={props.currentUser}\n                            friendList={friendList}\n                            selectFriendHabitCallback={selectFriendHabit}/>\n            </div>\n          </div>\n          <div className=\"col-4 text-center\">\n            <div className=\"card w-100 d-inline-flex p-2 bd-highlight\">\n              <Search searchEmailCallback={setEmail}\n                      resetCallback={resetSearch} /> \n              {searchEmail.length !== 0 ? <SearchResult email={searchEmail} \n                                                        addFriendCallback={addFriend}\n                                                        resetCallback={resetSearch}\n                                                        friendList={friendList}\n                                                        currentUser={props.currentUser}/> : null} \n            </div>\n            <hr className=\"style1\"></hr>\n            <div className=\"card w-100 d-inline-flex bd-highlight\">\n              <div className=\"card-body\">\n                <NewMessageForm habit={selectedHabit}\n                                addMessageCallback={addMessage}\n                                deselectFriendHabitCallback={deselectFriendHabit}/>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Friendship;","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport { getCurrentUser } from './components/util/ApiUtils';\nimport { ACCESS_TOKEN } from './components/util/BaseUrl';\nimport AppHeader from './components/common/AppHeader';\nimport NotFound from './components/common/NotFound';\nimport LoadingIndicator from './components/common/LoadingIndicator';\nimport PrivateRoute from './components/common/PrivateRoute';\nimport Home from './components/common/Home';\nimport Footer from './components/common/Footer';\nimport Login from './components/enjoyer/oauth/Login';\nimport Signup from './components/enjoyer/oauth/Signup';\nimport Profile from './components/enjoyer/oauth/Profile';\nimport OAuth2RedirectHandler from './components/enjoyer/oauth/OAuth2RedirectHandler';\nimport Habit from './components/habit/Habit';\nimport HabitTracker from './components/habitTracker/HabitTracker';\nimport Friendship from './components/friendship/Friendship';\nimport './App.css';\n\nconst App: React.FC = (props) => {\n  const [authenticated, setAuthenticated] = useState<boolean>(false)\n  const [currentUser, setCurrentUser] = useState<any>(null)\n  const [loading, setLoading] = useState<boolean>(false)\n\n  // Event handler\n  const onLogout = () => {\n    localStorage.removeItem(ACCESS_TOKEN);\n    setAuthenticated(false);\n    setCurrentUser(null);\n    window.location.href = '/reactjs-habit-builder';\n    // window.location.href = '/';   --> for local use\n  }\n\n  const loadCurrentlyLoggedInUser = () => {\n    setLoading(true)\n    getCurrentUser()\n      .then(response => {\n        setCurrentUser(response);\n        setAuthenticated(true);\n        setLoading(false);\n      }).catch(error => {\n        setLoading(false);\n      });   \n  }\n\n  useEffect(() => {\n    loadCurrentlyLoggedInUser();\n  }, []);\n\n  return (\n    <Router basename=\"/reactjs-habit-builder\">\n    {/* <Router> for local use */}\n      {loading ? <LoadingIndicator /> : null }\n      <div className=\"content\">\n        <div className=\"app-top-box\">\n          <AppHeader authenticated={ authenticated } \n                     onLogout={ onLogout } />\n        </div>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component = { Home }></Route>           \n            <PrivateRoute path=\"/profile\" \n                          authenticated={ authenticated } \n                          currentUser={ currentUser }\n                          component={ Profile }\n                          onLogout={ onLogout }>\n            </PrivateRoute>\n            <PrivateRoute path=\"/habit\"\n                          authenticated={ authenticated } \n                          component={ Habit }\n                          currentUser={ currentUser }>\n            </PrivateRoute>\n            <PrivateRoute path=\"/habitTracker\"\n                          authenticated={ authenticated } \n                          component={ HabitTracker }\n                          currentUser={ currentUser }>            \n            </PrivateRoute>\n            <PrivateRoute path=\"/friendship\"\n                          authenticated={ authenticated } \n                          component={ Friendship }\n                          currentUser={ currentUser }>            \n            </PrivateRoute>\n            <Route path=\"/login\"\n              render={ (props) => <Login authenticated={ authenticated } {...props} /> }></Route>\n            <Route path=\"/signup\"\n              render={ (props) => <Signup authenticated={ authenticated } {...props} /> }></Route>\n            <Route path=\"/oauth2/redirect\" \n                    component={ OAuth2RedirectHandler }></Route>  \n            <Route component={ NotFound }></Route>\n          </Switch>\n        </div>\n      </div>\n      <div className=\"text-center\">\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}